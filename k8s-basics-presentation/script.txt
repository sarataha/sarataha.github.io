## Provision a vagrant k8s cluster

export NUM_MINIONS=2
export KUBERNETES_PROVIDER=vagrant
curl -sS https://get.k8s.io | bash
cd kubernetes/
ls
cd cluster/
ln -s kubectl.sh kubectl
export PATH=`pwd`:$PATH

kubectl get nodes
kubectl get pods
kubectl get services

## Deploy microservices to K8S


## Install and Scale an RC Manifest

cat manifests/k8s-basics-rc.yaml
kubectl create -f manifests/k8s-basics-rc.yaml
kubectl describe rc k8s-basics
kubectl get pods
kubectl describe pod <pod_id>
kubectl logs -f <pod_id>
kubectl exec <pod> -- ls -alh
kubectl scale rc k8s-basics --replicas=4
kubectl get pods --output=wide
curl http://10.245.1.3:8888
cat manifests/k8s-basics-svc.yaml
kubectl create -f manifests/k8s-basics-svc.yaml
kubectl get service
kubectl get service k8s-basics -o yaml
curl -sS http://10.245.1.3:<port>/tree
# open in browser
# cleanup
kubectl delete svc k8s-basics
kubectl delete rc k8s-basics


## Install Deis v2 alpha

helm --version
helm repo add deis https://github.com/deis/charts
helm up
helm fetch deis/deis-dev
helm generate deis-dev
helm install deis-dev
kubectl get pods
kubectl get namespaces
kubectl get pods --namespace=deis
